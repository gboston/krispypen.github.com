<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kris Pypen]]></title>
  <link href="http://krispypen.github.com/atom.xml" rel="self"/>
  <link href="http://krispypen.github.com/"/>
  <updated>2012-10-27T17:06:32+02:00</updated>
  <id>http://krispypen.github.com/</id>
  <author>
    <name><![CDATA[Kris Pypen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Create an html5 based OS]]></title>
    <link href="http://krispypen.github.com/blog/2012/10/27/create-an-html5-based-os/"/>
    <updated>2012-10-27T16:22:00+02:00</updated>
    <id>http://krispypen.github.com/blog/2012/10/27/create-an-html5-based-os</id>
    <content type="html"><![CDATA[<p>Offcourse this is not a full tutorial how you can create a new OS. This is a simple proof of concept explaining how &#8220;easy&#8221; it can be these days.</p>

<!-- more -->


<p>Alsmost every phone can run a webkit browser. And on some its possible to run only a webkit browser and nothing else (see nemo mobile). This is the reason I started to create a proof of concept of my favorite user interface: Maemo. I called it WaemoJS. It uses html5 to create the gui based on Maemo, and it uses nodejs for getting system things like battery status, talking to the phone controller, reading the filesystem, taking a picture. These functions are not yet implemented at the time of writing :).</p>

<h4>Demo on a desktop:<br/></h4>

<p>First you must install <a href="https://github.com/rogerwang/node-webkit">node-webkit</a>, then get and run the WaemoJS app:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>&gt; git clone --recursive https://github.com/krispypen/WaemoJS.git
</span><span class='line'><span class="nv">$ </span>&gt; <span class="nb">cd </span>WaemoJS
</span><span class='line'><span class="nv">$ </span>&gt; /Path/To/nw .
</span></code></pre></td></tr></table></div></figure>


<h4>Source:</h4>

<p><a href="https://github.com/krispypen/WaemoJS">https://github.com/krispypen/WaemoJS</a></p>

<h4>Screenshots:</h4>

<p>Home screen:
<img class="center" src="https://raw.github.com/krispypen/WaemoJS/master/screenshots/screenshot1.png">
Application menu:
<img class="center" src="https://raw.github.com/krispypen/WaemoJS/master/screenshots/screenshot2.png">
Calculator app:
<img class="center" src="https://raw.github.com/krispypen/WaemoJS/master/screenshots/screenshot3.png">
Running apps switcher:
<img class="center" src="https://raw.github.com/krispypen/WaemoJS/master/screenshots/screenshot4.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compile NodeJS for your N900]]></title>
    <link href="http://krispypen.github.com/blog/2012/10/07/compile-nodejs-for-your-n900/"/>
    <updated>2012-10-07T10:13:00+02:00</updated>
    <id>http://krispypen.github.com/blog/2012/10/07/compile-nodejs-for-your-n900</id>
    <content type="html"><![CDATA[<p>This is how you can compile <a href="http://nodejs.org">NodeJS</a> on your N900 Maemo Mobile Phone. The Nokia N900 is an ARMv7 device, so this tutorial will maybe also help to build it for other ARMv7 devices (like the Galaxy S3 Tizen version).</p>

<!-- more -->


<p>First you need to have the <a href="http://wiki.maemo.org/Documentation/Maemo_5_Final_SDK_Installation">Maemo SDK</a>.</p>

<p>Then you can login into it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>&gt; /scratchbox/login
</span><span class='line'><span class="o">[</span>sbox-FREMANTLE_X86: ~<span class="o">]</span> &gt; sb-conf <span class="k">select </span>FREMANTLE_ARMEL
</span></code></pre></td></tr></table></div></figure>


<p>Make sure you have python 2.5 (or higher):<br/>
In your scratchbox:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; fakeroot apt-get install python2.5
</span></code></pre></td></tr></table></div></figure>


<p>Then outside the scratchbox I needed to remove the python symlink to make python2.5 the default:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>&gt; sudo rm /scratchbox/devkits/python-legacy/bin/python
</span></code></pre></td></tr></table></div></figure>


<p>Download the latest NodeJS</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; wget <span class="s2">&quot;http://nodejs.org/dist/v0.8.11/node-v0.8.11.tar.gz&quot;</span>
</span><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; tar -xvf node-v0.8.11.tar.gz
</span><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; <span class="nb">cd </span>node-v0.8.11
</span></code></pre></td></tr></table></div></figure>


<p>Add these 2 lines at the top inside the variables section in &#8220;deps/v8/build/common.gypi&#8221;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'> <span class="s">&#39;armv7%&#39;</span><span class="l-Scalar-Plain">:&#39;1&#39;,</span>
</span><span class='line'> <span class="l-Scalar-Plain">&#39;arm_neon%&#39;:&#39;1&#39;,</span>
</span></code></pre></td></tr></table></div></figure>


<p>Compile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; <span class="nb">export </span><span class="nv">LINK</span><span class="o">=</span>g++
</span><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; ./configure --without-snapshot
</span><span class='line'><span class="o">[</span>sbox-FREMANTLE_ARMEL: ~<span class="o">]</span> &gt; make
</span></code></pre></td></tr></table></div></figure>


<p>Now you can copy &#8220;out/Release/node&#8221; to your N900 and start having fun with NodeJS!</p>

<p>I created a github repository where we can put some code snippets: <a href="https://github.com/krispypen/NodeJSForMaemoSnippets">https://github.com/krispypen/NodeJSForMaemoSnippets</a></p>
]]></content>
  </entry>
  
</feed>
